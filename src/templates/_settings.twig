{% import "_includes/forms" as forms %}
{% import "codeeditor/codeEditor" as codeEditor %}

<h2>{{ 'Preview'|t('admin-bar') }}</h2>

{% set previewEntry = craft.entries.orderBy('RAND()').section('*').one() %}

<div class="admin-bar-settings-preview">
    {{ adminBar({ entry: previewEntry ?? null, force: true }) }}
</div>

<hr>

{{ forms.editableTableField({
    label: 'Additional Links'|t('admin-bar'),
    instructions: 'Add your own links to the Admin Bar.'|t('admin-bar'),
    id: 'customLinks',
    name: 'customLinks',
    addRowLabel: 'Add a link'|t('little-layout'),
    allowAdd: true,
    allowDelete: true,
    allowReorder: true,
    cols: {
        linkLabel: {
            heading: 'Label'|t('admin-bar'),
            type: 'singleline',
        },
        linkUrl: {
            heading: 'URL'|t('admin-bar'),
            type: 'singleline',
        },
        adminOnly: {
            heading: 'Admin only?'|t('admin-bar'),
            type: 'checkbox',
        },
    },
    rows: settings.customLinks ?? [],
}) }}

<hr>

{% set installedPlugins = [] %}
{% for plugin in widgetPlugins|keys %}
    {% if widgetPlugins[plugin].version %}
        {% set installedPlugins = installedPlugins|merge([plugin]) %}
    {% endif %}
{% endfor %}

<h2>{{ 'Admin Bar Widgets'|t('admin-bar') }}</h2>

<p>{{ 'Admin Bar Widgets display statuses and page-specific information based on the plugins that you currently have installed.'|t('admin-bar') }}</p>

<div class="admin-bar-settings-2-column" style="margin-block-start: var(--xl);">
    {% if installedPlugins|length %}
        <div>
            {% if 'blitz' in installedPlugins %}
                {{ forms.lightswitchField({
                    label: widgetPlugins.blitz.name,
                    id: 'widgetEnabledBlitz',
                    name: 'widgetEnabledBlitz',
                    on: settings.widgetEnabledBlitz,
                    instructions: 'Displays cache status for the current page.'|t('admin-bar'),
                }) }}
            {% endif %}

            {% if 'guide' in installedPlugins %}
                {{ forms.lightswitchField({
                    label: widgetPlugins.guide.name,
                    id: 'widgetEnabledGuide',
                    name: 'widgetEnabledGuide',
                    on: settings.widgetEnabledGuide,
                    instructions: 'Displays all of the guides for the current page entry.'|t('admin-bar'),
                }) }}
            {% endif %}

            {% if 'seomatic' in installedPlugins %}
                {{ forms.lightswitchField({
                    label: widgetPlugins.seomatic.name,
                    id: 'widgetEnabledSeomatic',
                    name: 'widgetEnabledSeomatic',
                    on: settings.widgetEnabledSeomatic,
                    instructions: 'Displays meta details for the current page.'|t('admin-bar'),
                }) }}
            {% endif %}
        </div>
    {% endif %}

    <div>
        {{ forms.lightswitchField({
            label: 'Displays labels next to Admin Bar Widget icons?'|t('guide'),
            id: 'displayWidgetLabels',
            name: 'displayWidgetLabels',
            on: settings.displayWidgetLabels,
        }) }}

        <details>
            <summary>{{ 'Plugins that also work with Admin Bar Widgets.'|t('admin-bar') }}</summary>

            <ul>
                {% for plugin in widgetPlugins|keys %}
                    {% if plugin not in installedPlugins %}
                        <li><a href="https://plugins.craftcms.com/{{ plugin }}">{{ widgetPlugins[plugin].name }}</a></li>
                    {% endif %}
                {% endfor %}
            </ul>
        </details>
    </div>
</div>

<hr>

{% set placeholder %}
admin-bar {
    --admin-bar-bg-color: oklch(0.131 0.036 248.399);
    --admin-bar-color-highlight: oklch(0.55 0.23 28.77);
    --admin-bar-color-text: rgb(228, 237, 246);
}
{% endset %}

{{ codeEditor.textareaField({
    label: 'Custom CSS'|t('admin-bar'),
    instructions: 'Use CSS Custom Properties or your own custom CSS to re-brand Admin Bar.'|t('admin-bar'),
    tip: 'You can style the **Preview** area above by using the class: **.admin-bar-settings-preview**'|t('admin-bar'),
    id: 'customCss',
    name: "customCss",
    placeholder: placeholder|replace({" ": "&nbsp;"})|raw|nl2br,
    value: settings.customCss,
    rows: 5,
}, "Custom CSS", {
    language: "css",
}, {
    wrapperClass: 'content-pane',
}) }}

{% set cssDefaults = include('admin-bar/_admin-bar-component-css.css') %}

{{ codeEditor.textareaField({
    label: 'CSS Defaults'|t('admin-bar'),
    instructions: 'Below are the contents of the CSS file for the Admin Bar Component. You can override any of these CSS variables in your front-end stylesheet, or in the Custom CSS field above.'|t('admin-bar'),
    value: cssDefaults|raw,
}, "Code Editor", {
    language: "css",
    readOnly: true,
}, {
    maxEditorRows: 0,
    wrapperClass: 'content-pane',
}) }}

{% css %}
    @layer admin-bar {
        .admin-bar-settings-preview {
            top: var(--header-height);
            position: sticky;
            z-index: 1;
        }
    }
    .admin-bar-settings-2-column {
        &:has(:nth-child(2)) {
            display: flex;
            gap: var(--l);

            & > div {
                flex: 1 1 400px;
            }
        }
    }
{% endcss %}