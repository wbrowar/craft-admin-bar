{# @var craft \craft\web\twig\variables\CraftVariable #}

{% import _self as self %}

{% set devMode = craft.app.config.general.devMode %}

{% set classes = [] %}

{% if fixed ?? false %}
    {% set classes = classes|merge(['fixed']) %}
{% elseif sticky ?? false %}
    {% set classes = classes|merge(['sticky']) %}
{% endif %}

{% if position ?? false and position == 'bottom' %}
    {% set classes = classes|merge(['bottom']) %}
{% endif %}

{% if rtl ?? false %}
    {% set classes = classes|merge(['rtl']) %}
{% endif %}

{% set adminBarAttributes = {
    class: classes,
    'greeting-text': 'greeting-text'|t('admin-bar', params = { name: currentUser.friendlyName }),
    id: id ?? 'admin-bar',
    'logout-href': url(logoutUrl),
    'logout-label': 'logout-label'|t('admin-bar'),
    'show-environment': devMode,
    'show-greeting': displayGreeting,
    'show-logout': displayLogout,
} %}

{% if currentUser and (currentUser.photo ?? false) %}
    {% set adminBarAttributes = adminBarAttributes|merge({
        'avatar-alt': 'avatar-alt'|t('admin-bar', params = { name: currentUser.friendlyName }),
        'avatar-src': currentUser.photo.getUrl({
            mode: 'crop',
            width: 50,
            height: 50,
        }),
    }) %}
{% endif %}

{% set textElements = textElements ?? [] %}

{% if devMode %}
    {% set textElements = textElements|merge([{
        'label-content': craft.app.config.env|upper,
        style: { '--admin-bar-text-label-color-bg': 'var(--admin-bar-environment-bg-color)' },
        title: 'Craft CMS is running in Dev Mode.'|t('admin-bar'),
    }]) %}
{% endif %}

<admin-bar {{ attr(adminBarAttributes) }}>
    {% if displayDashboardLink ?? true %}
        <admin-bar-button button-href="{{ cpUrl('dashboard') }}" label-text="{{ 'Dashboard'|t }}"><span slot="label-before">{{ self.iconDashboard }}</span></admin-bar-button>
    {% endif %}

    {% if editLinkUrl ?? false %}
        <admin-bar-button button-href="{{ cpUrl(editLinkUrl) }}" label-text="{{ 'Edit {name}'|t('admin-bar', params = { name: editLinkLabel ?? false ? ' ' ~ editLinkLabel : '' }) }}"><span slot="label-before">{{ self.iconEdit }}</span></admin-bar-button>
    {% else %}
      {% if entry ?? false and ((userCanEdit ?? false) or (entry.section.id in craft.app.entries.editableSectionIds)) %}
        {% set sectionName = displayDefaultEditSection ? ' ' ~ entry.section : ''  %}
        {% set entryEditUrl = entry.cpEditUrl %}

        <admin-bar-button button-href="{{ cpUrl(entryEditUrl) }}" label-text="{{ 'Edit {name}'|t('admin-bar', params = { name: editLinkLabel ?? false ? ' ' ~ editLinkLabel : '' }) }}"><span slot="label-before">{{ self.iconEdit }}</span></admin-bar-button>
      {% endif %}
    {% endif %}

    {% if not 'guide' in widgets|keys and displayGuideLink and plugin('guide') and (currentUser ? currentUser.can('accessPlugin-guide') : true) %}
        <admin-bar-button button-href="{{ cpUrl('guide') }}" label-text="{{ 'CMS Guide'|t('admin-bar') }}"><span slot="label-before">{{ self.iconGuide }}</span></admin-bar-button>
    {% endif %}

    {% if customLinks ?? false %}
        {% for link in customLinks %}
            {% if link.linkUrl ?? false %}
                {% if link.adminOnly != true %}
                    <admin-bar-button button-href="{{ url(link.linkUrl) }}" label-text="{{ link.linkLabel|t('admin-bar') }}">{{ self.customLinkIcon(link.linkUrl) }}</admin-bar-button>
                {% elseif link.adminOnly and currentUser and currentUser.admin %}
                    <admin-bar-button button-href="{{ url(link.linkUrl) }}" label-text="{{ link.linkLabel|t('admin-bar') }}"></admin-bar-button>
                {% endif %}
            {% endif %}
        {% endfor %}
    {% endif %}

    {% for link in additionalLinks %}
        {{ self.addConfigLink(link) }}
    {% endfor %}

    {% if not (proEdition and widgets|length) %}
        <span style="flex-grow: 1;"></span>
    {% endif %}

    {% if currentUser and displayUtilitiesLink ?? true %}
        <admin-bar-button button-href="{{ cpUrl('utilities') }}" label-text="{{ 'Utilities'|t('admin-bar') }}">{% apply spaceless %}
            {% if utilitiesNotificationCount > 0 %}
                <span slot="label-before"><admin-bar-text aria-hidden="true" label-content="{{ utilitiesNotificationCount }}" style="--admin-bar-text-padding: 0"></admin-bar-text></span>
            {% else %}
                <span slot="label-before">{{ self.iconUtilities }}</span>
            {% endif %}
        {% endapply %}</admin-bar-button>
    {% endif %}

    {% if currentUser and currentUser.admin and displaySettingsLink ?? true %}
        <admin-bar-button button-href="{{ cpUrl('settings') }}" label-text="{{ 'Settings'|t('admin-bar') }}"><span slot="label-before">{{ self.iconSettings }}</span></admin-bar-button>
    {% endif %}

    {% if proEdition and widgets|length %}
        <span style="flex-grow: 1;"></span>

        {% include 'admin-bar/_plugin-widgets.twig' %}
    {% endif %}

    {% if textElements|length %}
        {% for textAttrs in textElements %}
            <admin-bar-text {{ attr(textAttrs) }}></admin-bar-text>
        {% endfor %}
    {% endif %}
</admin-bar>

{% if useCss %}
    {% css adminBarOnPageCss() %}
{% endif %}

{% macro addConfigLink(link) %}
    {% if link.linkParams ?? false %}
        {% set params = link.linkParams %}
    {% else %}
        {% set params = '' %}
    {% endif %}

    {% set params = link.params ?? '' %}
    {% set protocol = link.protocol ?? '' %}
    {% set mustShowScriptName = link.mustShowScriptName ?? '' %}

    {% set userHasPermission = true %}
    {% if link.admin ?? false %}
        {% if currentUser and not currentUser.admin %}
            {% set userHasPermission = false %}
        {% endif %}
    {% elseif link.permissions ?? false %}
        {% for permission in link.permissions %}
            {% if currentUser and not currentUser.can(permission) %}
                {% set userHasPermission = false %}
            {% endif %}
        {% endfor %}
    {% endif %}

    {% if link.type == 'url' and userHasPermission %}
        <admin-bar-button button-href="{{ url(link.url, params, protocol, mustShowScriptName) }}" label-text="{{ link.title|t('admin-bar') }}">{{ self.customLinkIcon(link.url) }}</admin-bar-button>
    {% elseif link.type == 'cpUrl' and userHasPermission %}
        <admin-bar-button button-href="{{ cpUrl(link.url, params, protocol, mustShowScriptName) }}" label-text="{{ link.title|t('admin-bar') }}"></admin-bar-button>
    {% elseif link.type == 'action' and userHasPermission %}
        {% set actionParams = params|length ? params ~ '&returnUrl=' ~ craft.request.url : 'returnUrl=' ~ craft.request.url %}
        <admin-bar-button button-href="{{ actionUrl(link.url, actionParams) }}" label-text="{{ link.title|t('admin-bar') }}"></admin-bar-button>
    {% endif %}
{% endmacro %}

{% macro customLinkIcon(url) %}{% apply spaceless %}
    {% if url == '/' %}
        <span slot="label-before">{{ self.iconHome }}</span>
    {% endif %}
{% endapply %}{% endmacro %}

{# dashboard #}
{% macro iconDashboard() %}{% apply spaceless %}
    {{ svg('@appicons/gauge.svg')|attr({ class: 'icon' }) }}
{% endapply %}{% endmacro %}

{# edit #}
{% macro iconEdit() %}{% apply spaceless %}
    {{ svg('@appicons/pencil.svg')|attr({ class: 'icon' }) }}
{% endapply %}{% endmacro %}

{# guide #}
{% macro iconGuide() %}{% apply spaceless %}
    {{ svg('@wbrowar/guide/assetbundles/static/icon-mask.svg')|attr({ class: 'icon' }) }}
{% endapply %}{% endmacro %}

{# home #}
{% macro iconHome() %}{% apply spaceless %}
    {{ svg('@appicons/house.svg')|attr({ class: 'icon' }) }}
{% endapply %}{% endmacro %}

{# settings #}
{% macro iconSettings() %}{% apply spaceless %}
    {{ svg('@appicons/gear.svg')|attr({ class: 'icon' }) }}
{% endapply %}{% endmacro %}

{# user #}
{% macro iconUser() %}{% apply spaceless %}
    {{ svg('@appicons/user.svg')|attr({ class: 'icon' }) }}
{% endapply %}{% endmacro %}

{# utilities #}
{% macro iconUtilities() %}{% apply spaceless %}
    {{ svg('@appicons/wrench.svg')|attr({ class: 'icon' }) }}
{% endapply %}{% endmacro %}
